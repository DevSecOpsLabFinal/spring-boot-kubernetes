pool:
  vmImage: ubuntu-latest
stages:
  - stage: Build
    jobs:
      - job: build
        displayName: 'Build'
        steps:
        - task: Maven@3
          inputs:
            mavenPomFile: 'pom.xml'
            publishJUnitResults: false
            javaHomeOption: 'JDKVersion'
            mavenVersionOption: 'Default'
            mavenAuthenticateFeed: false
            effectivePomSkip: false
            sonarQubeRunAnalysis: false

        - task: CopyFiles@2
          inputs:
              sourceFolder: '$(Build.SourcesDirectory)'
              contents: |
                **/target/*.jar
                **/surefire-reports/*.xml
              targetFolder: '$(Build.ArtifactStagingDirectory)'

        - task: PublishBuildArtifacts@1
          inputs:
              pathToPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: appJar
              publishLocation: 'Container'

  - stage: SAST
    jobs:
      - job: Sonar
        workspace:
          clean: all
        displayName: Code Review
        steps:
          - task: SonarCloudPrepare@1
            inputs:
              SonarCloud: 'sonarcloud'
              organization: 'devsecopslabfinal'
              projectKey: 'DevSecOpsLabFinal_spring-boot-kubernetes'
              projectName: 'spring-boot-kubernetes'
            displayName: 'Preparing Sonarqube Environment'

          - task: Maven@4
            inputs:
              mavenPomFile: 'pom.xml'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              codeCoverageToolOption: 'JaCoCo'
              javaHomeOption: 'JDKVersion'
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: false
              effectivePomSkip: false
              sonarQubeRunAnalysis: true
              isJacocoCoverageReportXML: true
              sqMavenPluginVersionChoice: 'latest'

          - task: SonarCloudPublish@1
            inputs:
              pollingTimeoutSec: '300'
            displayName: 'Publish Analysis Results'

          - task: sonarcloud-buildbreaker@2
            inputs:
              SonarCloud: 'sonarcloud'
              organization: 'devsecopslabfinal'     
  - stage: SCA
    jobs:
    - job: Job
      displayName: 'SCA'
      steps:
        - task: Maven@4
          inputs:
            mavenPomFile: 'pom.xml'
            publishJUnitResults: true
            testResultsFiles: '**/surefire-reports/TEST-*.xml'
            javaHomeOption: 'JDKVersion'
            mavenVersionOption: 'Default'
            mavenAuthenticateFeed: false
            effectivePomSkip: false
            sonarQubeRunAnalysis: false
          displayName: Maven - Genera Build
        - task: dependency-check-build-task@6
          displayName: Dependency check
          inputs:
            projectName: 'spring-boot-kubernetes'
            scanPath: '$(Build.SourcesDirectory)/target'
            format: 'ALL'
#            failOnCVSS: '7'
  - stage: ContainerSecurity
    jobs:
    - job: containersecurity
      displayName: 'ContainerSecurity'
      steps:
        - task: Maven@4
          inputs:
            mavenPomFile: 'pom.xml'
            publishJUnitResults: true
            testResultsFiles: '*/surefire-reports/TEST-.xml'
            javaHomeOption: 'JDKVersion'
            mavenVersionOption: 'Default'
            mavenAuthenticateFeed: false
            effectivePomSkip: false
            sonarQubeRunAnalysis: false

        - task: DockerInstaller@0
          inputs:
            dockerVersion: '17.09.0-ce'

        - task: Docker@2
          inputs:
            containerRegistry: 'DockerRegistry'
            command: 'login'

        - task: Docker@2
          inputs:
            containerRegistry: 'DockerRegistry'
            repository: 'mawidanche/lab-final-dev-sec-ops'
            command: 'build'
            Dockerfile: '**/Dockerfile'

        - script: | 
            sudo apt-get install -y rpm
            wget https://github.com/aquasecurity/trivy/releases/download/v0.27.1/trivy_0.27.1_Linux-64bit.deb
            sudo dpkg -i trivy_0.27.1_Linux-64bit.deb
            trivy image --exit-code 1 --severity HIGH,CRITICAL mawidanche/lab-final-dev-sec-ops:$(Build.BuildId)
          displayName: Image Scan
        - task: Docker@2
          inputs:
            containerRegistry: 'DockerRegistry'
            repository: 'mawidanche/lab-final-dev-sec-ops'
            command: 'buildAndPush'